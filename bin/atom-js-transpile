#!/usr/bin/env python

import os
import shutil
import tempfile

# Because regenerator prepends the runtime to the top of the file,
# the /** @jsx React.DOM */ directive is no longer at the top of the file,
# so jsx can no longer find it. Therefore, we must add it ourselves before
# running jsx.
#
# This is no longer an issue in React 0.12.0
# (see http://facebook.github.io/react/blog/2014/10/28/react-v0.12.html), but
# Atom appears locked into a fork of React 0.11.2, so using the newer React
# is not an option.
def add_jsx_directive(src):
    for root, dirs, files in os.walk(src):
        for filename in files:
            if not filename.endswith('.js'):
                continue

            path = os.path.join(root, filename)
            with open(path, 'r') as f:
                contents = f.read()
            if '/** @jsx React.DOM */' in contents:
                new_contents = '/** @jsx React.DOM */\n' + contents
                with open(path, 'w') as f:
                    f.write(new_contents)

def transpile(src, dst):
    temp_dir = tempfile.mkdtemp()
    regenerator_command = 'node_modules/atom-js-transpiler/node_modules/.bin/regenerator --include-runtime %s %s' % (src, temp_dir)
    os.system(regenerator_command)
    add_jsx_directive(temp_dir)
    jsx_command = 'node_modules/atom-js-transpiler/node_modules/.bin/jsx --harmony --strip-types %s %s' % (temp_dir, dst)
    os.system(jsx_command)
    shutil.rmtree(temp_dir)

def main():
    transpile('src', 'lib')
    transpile('test', 'spec')

if __name__ == '__main__':
    main()
